@media (max-width: 600px) {
    .navbar {
        flex-direction: column;
        align-items: center;
        gap: 10px;
        padding: 10px;
    }
    .logo {
        font-size: 18px;
    }
    .logo-img {
        width: 25px;
        height: 25px;
    }
    .container {
        margin-top: 60px;
        padding: 15px;
    }
    .title {
        font-size: 18px;
    }
    .upload-btn {
        font-size: 0.9em;
        padding: 8px 16px;
    }
}
<style>
    body {
        font-family: Arial, sans-serif;
        text-align: center;
        padding: 20px;
        background: linear-gradient(to right, #667eea, #764ba2);
        color: white;
        margin: 0;
    }
    
    .logo {
        font-size: 24px;
        font-weight: bold;
    }
    .logo .highlight {
        color: #ff9800;
    }
    .menu {
        display: flex;
        gap: 20px;
    }
    .menu a {
        color: white;
        text-decoration: none;
        font-weight: bold;
        transition: color 0.3s;
    }
    .menu a:hover {
        color: #ff9800;
    }
    .btn-plan {
        background: #ff9800;
        color: white;
        padding: 10px 15px;
        border-radius: 6px;
        cursor: pointer;
        font-weight: bold;
        text-decoration: none;
        transition: background 0.3s ease;
    }
    .btn-plan:hover {
        background: #e68900;
    }

    .navbar {
        display: flex;
        justify-content: center;
        gap: 50px;
        align-items: center;
        padding: 15px 30px;
        background: rgba(255, 255, 255, 0.1);
        position: fixed;
        top: 0;
        width: 100%;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        left: -30px;
    }
    .container {
        max-width: 600px;
        margin: 100px auto 20px;
        background: rgba(255, 255, 255, 0.1);
        padding: 20px;
        border-radius: 12px;
        text-align: center;
    }
    .upload-btn {
        background: #ff9800;
        color: white;
        padding: 12px 24px;
        border-radius: 6px;
        cursor: pointer;
        font-weight: bold;
        display: inline-block;
        transition: background 0.3s ease;
        font-size: 1.2em; 
        padding: 15px 30px; 
        animation: pulse 2s infinite alternate; 
    }
    .upload-btn:hover {
        background: #e68900;
    }
    #preview {
        max-width: 100%;
        margin-top: 20px;
        display: none;
        border-radius: 8px;
    }
    #result {
        margin-top: 20px;
        white-space: pre-wrap;
        background: rgba(0, 0, 0, 0.2);
        padding: 12px;
        border-radius: 8px;
        display: none;
    }
    .title {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 20px;
    }
    .logo-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .logo-img {
        width: 40px;
        height: 40px;
        border-radius: 50%;
    }
    @keyframes pulse {
        from { transform: scale(1); }
        to { transform: scale(1.05); }
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

<div class="navbar">
    <div class="logo-container">
        <img src="/480497961_620353230725992_6006792969598717897_n.jpg" alt="Logo" class="logo-img">
        <span class="logo"><span class="highlight">GARA</span>TUJAS</span>
    </div>
    <div class="menu">
        
    </div>
    <a href="index.html" class="btn-plan">Desconectar</a>
</div>

<div class="container">
    <h1 class="title">Carregue um desenho para fazer a leitura.</h1>
    <label class="upload-btn">
        <i class="fas fa-upload"></i>
        <input type="file" id="imageInput" accept="image/*" style="display: none;">
    </label>
    <br>
    <img id="preview" alt="Imagem carregada">
    <p id="result"></p>
</div>

<script>
    document.getElementById('imageInput').addEventListener('change', async function(event) {
        const file = event.target.files[0];
        if (!file) return;

        const reader = new FileReader();
        reader.onload = async function(e) {
            const dataURL = e.target.result;
            document.getElementById('preview').src = dataURL;
            document.getElementById('preview').style.display = 'block';

            const resultElement = document.getElementById('result');
            resultElement.style.display = 'block';
            resultElement.textContent = 'Processando a imagem...';

            const base64String = dataURL.split(',')[1];

            const apiKey = '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';
            const promptText = `
                Você é um especialista em psicologia infantil, psicopedagogia e filosofia da arte. Seu objetivo é analisar um desenho infantil e interpretar elementos que revelem aspectos sobre quem fez a arte, levando em conta fatores emocionais, cognitivos e expressivos.
            `;

            const requestBody = {
                model: "gpt-4o",
                messages: [
                    { role: "system", content: "Você é um assistente especialista em análise de arte infantil." },
                    { role: "user", content: [
                        { type: "text", text: promptText },
                        { type: "image_url", image_url: `data:image/png;base64,${base64String}` }
                    ]}
                ],
                max_tokens: 500
            };

            try {
                const response = await fetch('https://api.openai.com/v1/chat/completions', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${apiKey}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestBody)
                });

                const result = await response.json();
                resultElement.textContent = result.choices?.[0]?.message?.content || 'Ops! Esse desenho é muito criativo! Você deve adquirir um plano. ';
            } catch (error) {
                resultElement.textContent = 'Erro ao conectar à API.';
            }
        };
        reader.readAsDataURL(file);
    });
</script>